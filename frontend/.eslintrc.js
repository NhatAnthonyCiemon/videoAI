/** @type {import('eslint').Linter.Config} */
module.exports = {
  root: true,
  env: {
    node: true,
    jest: true,
    es2021: true,
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'commonjs',
    tsconfigRootDir: __dirname,
    project: ['./tsconfig.json'],
  },
  plugins: ['@typescript-eslint', 'react-hooks'],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended-type-checked',
    'plugin:prettier/recommended',
    'next/core-web-vitals',
  ],
  ignorePatterns: [
    'eslint.config.mjs',
    'commitlint.config.js',
    'dist/**/*',
    'build/**/*',
    'node_modules/**/*',
    // 'test/**/*',
    'prisma/migrations/**/*',
    'uploads/**/*',
    'public/**/*',
    'static/**/*',
    '*.log',
    'logs/**/*',
    'tmp/**/*',
    'temp/**/*',
    '.env*',
    'docker-compose*.yml',
    'Dockerfile*',
    'docs/**/*',
    'package-lock.json',
    'yarn.lock',
    'bun.lock',
    '.vscode/**/*',
    '.idea/**/*',
    '.DS_Store',
    'Thumbs.db',
    'coverage/**/*',
    '.nyc_output/**/*',
  ],
  rules: {
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-floating-promises': 'warn',
    '@typescript-eslint/no-unsafe-argument': 'warn',
    '@typescript-eslint/no-unsafe-assignment': 'warn',
    '@typescript-eslint/no-unsafe-member-access': 'warn',
    '@typescript-eslint/no-unsafe-call': 'warn',
    '@typescript-eslint/no-unsafe-return': 'warn',
    'no-console': 'warn',
    'react/no-unescaped-entities': 'off',
    '@typescript-eslint/no-unused-vars': [
      'warn',
      {
        argsIgnorePattern: '^_',
        varsIgnorePattern: '^_',
      },
    ],
    '@typescript-eslint/no-extra-non-null-assertion': 'off',
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',
    '@typescript-eslint/no-explicit-any': 'off',
  },

};
